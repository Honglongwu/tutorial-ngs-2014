========================================
So you want to get some sequencing data?
========================================

This is a set of tutorials for working with the NCBI and MG-RAST databases -- s\
pecifically, to download project specific information.

First, let's think about how these databases are structured.  I am going to cre\
ate a database for folks to deposit whole genome sequences.  What kind of infor\
mation am I going to store in this?  Many of you may be familiar with such a da\
tabase, hosted by the `NCBI <http://www.ncbi.nlm.nih.gov/>`_.

Let's come up with a list of things we'd like stored in	this database and discuss some	of the challenges involved in database creation, management, and access.

The challenge
=============
So, you've been	given a	list of	genomes	and been asked to create a phylogenetic tree of these genomes.	 How big would this list be before you thought about hiring an undergraduate to download sequences?

Say the list is only 3 genomes::

   CP000962
   CP000967
   CP000975
   
The following are some ways with which I've used to grab genome sequences:

#. Go to the web portal and look up each FASTA
#. Go to the `FTP site <ftp://ftp.ncbi.nlm.nih.gov/refseq/>`_, find each genome, and download manually
#. Use the NCBI Web Services API to download the data

Among these, I'm going to assume many of you are familiar with the first two.  This tutorial then is going to focus on using APIs.  

What is an API and how does it relate to NCBI?
----------------------------------------------

Here's some `answers <http://stackoverflow.com/questions/7440379/what-exactly-is-the-meaning-of-an-api>`_, among which my favorite is "an interface through which you access someone else's code or through which someone else's code accesses yours -- in effect the public methods and properties."

The NCBI has a whole toolkit which they call *Entrez Programming Utilities* or *eutils* for short.  You can read all about it in the `documentation <http://www.ncbi.nlm.nih.gov/books/NBK25501/>`_.  There are a lot of things you can do to interface with all things NCBI, including publications, etc., but I am going to focus today on downloading sequencing data.

To do this, you're going to be using one tool in *eutils*, called *efetch*.  There is a whole chapter devoted to `efetch <http://www.ncbi.nlm.nih.gov/books/NBK25499/#chapter4.EFetch>`_ -- when I first started doing this kind of work, this documentation always broke my heart.  Its easier for me to just show you how to use it.

Open a web browser, and try the following URL to download the nucleotide genome for CB00962::

    http://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=CP000962&rettype=fasta&retmode=text

Note that the NCBI knows a lot about this genome.  Check it out `here <http://www.ncbi.nlm.nih.gov/nuccore/CP000962>`_.

If I want to access other kinds of data associated with this genome, I would try the following command::

   http://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=CP000962&rettype=gb&retmode=text

Do you notice the difference in these two commands?  Let's breakdown the command here:

#.  <http://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?>  This is command telling your computer program (or your browser) to talk to the NCBI API tool efetch.
#.  <db=nuccore>  This command tells the NCBI API that you'd like it to look in this particular database for some data.  Other databases that the NCBI has available can be found `here <http://eutils.ncbi.nlm.nih.gov/entrez/eutils/einfo.fcgi>`_.
#.  <id=CP000962>  This command tells the NCBI API efetch the ID of the genome you want to find.
#.  <rettype=gb&retmode=text>  These two commands tells the NCBI how the data is returned.  You'll note that in the two examples above this command varied slightly.  In the first, we asked for only the FASTA sequence, while in the second, we asked for the Genbank file.  Here's some elusive documentation on where to find these `"return" objects <http://www.ncbi.nlm.nih.gov/books/NBK25499/table/chapter4.chapter4_table1/?report=objectonly>`_.  


Also, a useful command is also <version=1>.  There are different versions of sequences and some times that is useful.  For reproducibility, I try to specify versions in my queries, see these `comments <http://www.ncbi.nlm.nih.gov/Class/MLACourse/Modules/Format/exercises/qa_accession_vs_gi.html>`_.

.. Note:: 

   Notice the "&" that comes between each of these little commands, it is necessary and important.   

Ok, let's think of automating this sort of query.  

In the shell, you could run the same commands above with the addition of *curl* on your EC2 instance::

    curl http://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=CP000962&rettype=fasta&retmode=text

You'll see it fly on to your screen.  Don't panic - you can save it to a file and make it more useful.::

    curl http://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=CP000962&rettype=fasta&retmode=text > CP000962.fa

You could now imagine writing a program where you made a list of IDs you want to download and put it in a for loop, *curling* each genome and saving it to a file.  The following is a `script <https://github.com/adina/tutorial-ngs-2014/blob/master/ncbi/fetch-genomes.py>`_ that was provided to me by buddy Jordan Fish before I even knew how to program --- and I still use it today.  




